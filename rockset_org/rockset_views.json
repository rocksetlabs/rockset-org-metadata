{
  "data": [
    {
      "path": "taxi.blue_diamond",
      "name": "blue_diamond",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select\n    *\nfrom\n    taxi.chi_taxi_v3 c\nwhere\n    company = 'Blue Diamond'\nlimit\n    10\n",
      "entities": [
        "taxi.chi_taxi_v3"
      ],
      "state": "CREATED",
      "created_at": "2022-10-12T13:47:15Z",
      "modified_at": "2022-10-12T13:47:15Z"
    },
    {
      "path": "testing.Final_Game",
      "name": "Final_Game",
      "description": "",
      "workspace": "testing",
      "creator_email": "milesfreeborn@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "WITH view as\n(SELECT\n    SCHOOL,\n    YEAR,\n    ROW_NUMBER() OVER(\n        PARTITION BY SCHOOL,\n        YEAR\n        ORDER BY\n            ROUND DESC\n    ) as Last_Game_Flag,\n    GAME_RESULT,\n    ROUND,\n    CASE\n        WHEN ROUND = 1 AND GAME_RESULT = 'Loss' THEN 'First Round'\n        WHEN ROUND = 2 AND GAME_RESULT = 'Loss' THEN 'Second Round'\n        WHEN ROUND = 3 AND GAME_RESULT = 'Loss' THEN 'Sweet Sixteen'\n        WHEN ROUND = 4 AND GAME_RESULT = 'Loss' THEN 'Elite 8'\n        WHEN ROUND = 5 AND GAME_RESULT = 'Loss' THEN 'Final Four'\n        WHEN ROUND = 6 AND GAME_RESULT = 'Loss' THEN 'Championship Game'\n        WHEN ROUND = 6 AND GAME_RESULT = 'Win' THEN 'National Champs'\n        ELSE 'Other'\n    END as FINAL_RESULT\nFROM\n    testing.march_madness_school_results m)\nSELECT SCHOOL, YEAR,FINAL_RESULT\nFROM view\nWHERE Last_Game_Flag=1",
      "entities": [
        "testing.march_madness_school_results"
      ],
      "state": "CREATED",
      "created_at": "2024-04-01T17:53:37Z",
      "modified_at": "2024-04-01T17:53:37Z"
    },
    {
      "path": "taxi.tip_vs_tract",
      "name": "tip_vs_tract",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    c.dropoff_tract,\n    AVG(c.tips) AS average_tip,\n    MAX(c.tips) AS max_tip\nFROM\n    taxi.chi_taxi c HINT(access_path=column_scan)\nWHERE\n    dropoff_tract IS NOT NULL\nGROUP BY\n    dropoff_tract\nORDER BY\n    average_tip DESC",
      "entities": [
        "taxi.chi_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-09-17T20:01:45Z",
      "modified_at": "2021-09-17T20:01:45Z"
    },
    {
      "path": "taxi.testView1",
      "name": "testView1",
      "description": "",
      "workspace": "taxi",
      "creator_email": "david+demo@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT * FROM taxi.chi_taxi c",
      "entities": [
        "taxi.chi_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-09-22T16:59:06Z",
      "modified_at": "2021-09-22T16:59:06Z"
    },
    {
      "path": "testing.mm_view",
      "name": "mm_view",
      "description": "a condensed version of March Madness data",
      "workspace": "testing",
      "creator_email": "milesfreeborn@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT SCHOOL, YEAR,\nCONCAT(CAST(YEAR as STRING),CAST(ROUND as STRING)) AS G_ORDER,\nGAME_RESULT,\nPOINT_DIFFERENTIAL,\nCASE WHEN POINT_DIFFERENTIAL >=10 THEN 'Big Win' ELSE 'Not Big Win' END AS POINT_DIFFERENTIAL_Flag\nFROM testing.march_madness_school_results m",
      "entities": [
        "testing.march_madness_school_results"
      ],
      "state": "CREATED",
      "created_at": "2024-03-27T04:28:21Z",
      "modified_at": "2024-03-27T13:02:43Z"
    },
    {
      "path": "commons.tyler_example_step1",
      "name": "tyler_example_step1",
      "description": "",
      "workspace": "commons",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select * from commons.tyler_example_step3 t limit 1",
      "entities": [
        "commons.tyler_example_step3",
        "taxi.chi_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-12-14T17:05:32Z",
      "modified_at": "2021-12-14T17:08:02Z"
    },
    {
      "path": "vector_demos.lookup",
      "name": "lookup",
      "description": "",
      "workspace": "vector_demos",
      "creator_email": "rafael@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    title,\n    author,\n    rating,\n    description,\n    ratings,\n    embedding\nFROM\n    commons.book_catalogue_embeddings catalogue\nWHERE\n    title = 'Dune'\nLIMIT\n    1\n",
      "entities": [
        "commons.book_catalogue_embeddings"
      ],
      "state": "CREATED",
      "created_at": "2023-09-19T00:49:11Z",
      "modified_at": "2023-09-19T00:49:11Z"
    },
    {
      "path": "vector_demos.similarity_indexes",
      "name": "similarity_indexes",
      "description": "",
      "workspace": "vector_demos",
      "creator_email": "rafael@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select\n        si.collection.workspace cws,\n        si.collection.name cname,\n        default_nprobe,\n        dimension,\n        faiss_factory_string,\n        field,\n        metric,\n        name\n      from _system._similarity_index si\n",
      "entities": [],
      "state": "CREATED",
      "created_at": "2023-09-19T03:18:45Z",
      "modified_at": "2023-09-19T03:18:45Z"
    },
    {
      "path": "sandbox.except_test",
      "name": "except_test",
      "description": "testing except",
      "workspace": "sandbox",
      "creator_email": "patrick.druley@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    * except(t.entities)\nFROM\n    Demo.twitter_kinesis_30day t\nLIMIT\n    10",
      "entities": [
        "Demo.twitter_kinesis_30day"
      ],
      "state": "CREATED",
      "created_at": "2022-10-31T14:52:57Z",
      "modified_at": "2022-10-31T14:52:57Z"
    },
    {
      "path": "commons.v1",
      "name": "v1",
      "description": "",
      "workspace": "commons",
      "creator_email": "omar@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select :1",
      "entities": [],
      "state": "CREATED",
      "created_at": "2023-03-22T19:53:13Z",
      "modified_at": "2023-03-22T19:53:13Z"
    },
    {
      "path": "Demo_Finance.SelectStarWithJoinExample",
      "name": "SelectStarWithJoinExample",
      "description": "",
      "workspace": "Demo_Finance",
      "creator_email": "brendan.conrad@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n  *\nFROM\n    Demo_Finance.finance_customers c\nLEFT JOIN\n  Demo_Finance.finance_products f ON c._id = f._id\nLIMIT\n    10",
      "entities": [
        "Demo_Finance.finance_products",
        "Demo_Finance.finance_customers"
      ],
      "state": "CREATED",
      "created_at": "2024-05-14T18:31:50Z",
      "modified_at": "2024-05-14T18:31:50Z"
    },
    {
      "path": "taxi.Sun_Taxi",
      "name": "Sun_Taxi",
      "description": "Only Sun Taxi Data",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    *\nFROM\n    taxi.chi_taxi_v3\nwhere\n    company = 'Sun Taxi'\n",
      "entities": [
        "taxi.chi_taxi_v3"
      ],
      "state": "CREATED",
      "created_at": "2022-04-19T19:58:33Z",
      "modified_at": "2022-04-19T19:58:33Z"
    },
    {
      "path": "commons.tyler_example_set2",
      "name": "tyler_example_set2",
      "description": "",
      "workspace": "commons",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select * from commons.tyler_example_step1 t limit 1",
      "entities": [
        "commons.tyler_example_step1",
        "taxi.sample_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-12-14T17:06:14Z",
      "modified_at": "2021-12-14T17:06:14Z"
    },
    {
      "path": "commons.testview",
      "name": "testview",
      "description": "asdfsadfdfd",
      "workspace": "commons",
      "creator_email": "jon.tuite@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "with tweets as (\n    select\n        t.user.name,\n        t.text,\n        upper(sym.text) as ticker\n    from\n        Demo.tweets_alias as t,\n        unnest(t.entities.symbols) as sym\n    where\n        t.entities.symbols [1] is not null\n        and t._event_time > current_timestamp() - DAYS(:days)\n)\nselect\n    tw.ticker,\n    tkr.Name as CompanyName,\n    tkr.Industry,\n    count(*) as tweet_count\nfrom\n    tweets as tw\n    join Demo.tickers_alias as tkr on tkr.Symbol = tw.ticker\ngroup by\n    tw.ticker,\n    tkr.Name,\n    tkr.Industry\norder by\n    count(*) desc\nlimit\n    10;",
      "entities": [
        "Demo.tweets_alias",
        "Demo.tickers_alias",
        "Demo.twitter_live",
        "Demo_Social_Media.tickers_apr_2022"
      ],
      "state": "CREATED",
      "created_at": "2023-03-13T22:02:03Z",
      "modified_at": "2023-03-13T22:02:03Z"
    },
    {
      "path": "Demo_Weather_Alert.RecentWeatherAlerts",
      "name": "RecentWeatherAlerts",
      "description": "",
      "workspace": "Demo_Weather_Alert",
      "creator_email": "brendan.conrad@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    *\nFROM\n    Demo_Weather_Alert.weather_alerts\nORDER BY\n  _event_time DESC\nLIMIT\n  10",
      "entities": [
        "Demo_Weather_Alert.weather_alerts"
      ],
      "state": "CREATED",
      "created_at": "2024-05-08T20:50:57Z",
      "modified_at": "2024-05-08T20:50:57Z"
    },
    {
      "path": "taxi.fares_vs_dow",
      "name": "fares_vs_dow",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n  c.start_dow AS day,\n  MAX(c.fare) AS maximum_fare,\n  MIN(c.fare) AS minimum_fare,\n  AVG(c.fare) AS avg_fare,\n  STDDEV(c.fare) AS std_dev_fare,\n  COUNT(1) AS rides\nFROM\n  taxi.chi_taxi c HINT(access_path=column_scan)\nWHERE\n  c.duration_s >= 600\nGROUP BY\n  day\nORDER BY\n  day",
      "entities": [
        "taxi.chi_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-09-17T20:00:54Z",
      "modified_at": "2021-09-17T20:00:54Z"
    },
    {
      "path": "SOC2.Tickets",
      "name": "Tickets",
      "description": "",
      "workspace": "SOC2",
      "creator_email": "sofia@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "(SELECT * FROM SOC2.Tickets0)\nUNION\n(SELECT * FROM SOC2.Tickets1)\nUNION\n(SELECT * FROM SOC2.Tickets2)\n",
      "entities": [
        "SOC2.Tickets2",
        "SOC2.Tickets1",
        "SOC2.Tickets0"
      ],
      "state": "CREATED",
      "created_at": "2024-04-05T21:01:38Z",
      "modified_at": "2024-04-05T21:01:38Z"
    },
    {
      "path": "Demo_Rocksong.vRocksongArea",
      "name": "vRocksongArea",
      "description": "",
      "workspace": "Demo_Rocksong",
      "creator_email": "brendan.conrad@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n  *\nFROM\n  Demo_Rocksong.rocksong_area r",
      "entities": [
        "Demo_Rocksong.rocksong_area"
      ],
      "state": "CREATED",
      "created_at": "2024-04-22T23:10:03Z",
      "modified_at": "2024-04-22T23:10:03Z"
    },
    {
      "path": "Demo_Rocksong.vRocksongAreaSortName",
      "name": "vRocksongAreaSortName",
      "description": "",
      "workspace": "Demo_Rocksong",
      "creator_email": "brendan.conrad@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n  r.*,\n  w.*\nFROM\n  Demo_Rocksong.rocksong_area r\nLEFT JOIN Demo_Rocksong.rocksong_area w ON r._id = w._id\nLIMIT 1",
      "entities": [
        "Demo_Rocksong.rocksong_area"
      ],
      "state": "CREATED",
      "created_at": "2024-04-22T23:11:22Z",
      "modified_at": "2024-04-23T00:47:03Z"
    },
    {
      "path": "taxi.peace_taxi_association",
      "name": "peace_taxi_association",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select\n    *\nfrom\n    taxi.chi_taxi_v3 c\nwhere\n    company = 'Peace Taxi Assoc'\n  limit 10\n;\n",
      "entities": [
        "taxi.chi_taxi_v3"
      ],
      "state": "CREATED",
      "created_at": "2023-01-10T18:32:37Z",
      "modified_at": "2023-01-10T18:32:55Z"
    },
    {
      "path": "taxi.fares_vs_duration",
      "name": "fares_vs_duration",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "with trips as (\n    Select\n        sum(c.fare) sum_fares,\n          count(c.fare) cnt_fares,\n        duration_s,\n          NTILE(10) OVER (ORDER BY duration_s) AS quantile,\n    from\n        taxi.chi_taxi c\n    where\n        duration_s / 60 between 1\n        and 90\n    group by\n        duration_s\n)\nselect\n    sum(t.sum_fares) / sum(t.cnt_fares) as avg_fares,\n    sum(t.cnt_fares) as num_trips,\n    cast(min(t.duration_s / 60) as string) || ' to ' || cast(max(t.duration_s / 60) as string) as duration_range\nfrom\n    trips t\ngroup by t.quantile\norder by t.quantile",
      "entities": [
        "taxi.chi_taxi"
      ],
      "state": "CREATED",
      "created_at": "2021-09-17T19:58:19Z",
      "modified_at": "2021-09-17T19:58:19Z"
    },
    {
      "path": "taxi.fts_example",
      "name": "fts_example",
      "description": "",
      "workspace": "taxi",
      "creator_email": "tyler.denton@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "script{{{\nexport function array_suffixes(split_string, min_length = null, max_length = null) {\n\tif(typeof(split_string) != 'string' || typeof(sprint_string) == null){\n    \treturn;\n    }\n\tvar split_string_array = create_return((split_string.toLowerCase()).split(/\\W+/));\n    var return_array = new Array();\n    for (var i = 0; i < split_string_array.length; ++i) {\n        return_array.push(create_substrings(split_string_array[i], min_length, max_length));\n    }\n\n    var place_holder_array_due_to_bug = new Array();\n    place_holder_array_due_to_bug = create_return(return_array.flat());\n    return new Set(place_holder_array_due_to_bug);\n}\n\nexport function create_substrings(_string, min_length, max_length) {\n    var i, j, result = [];\n    var size = (min_length || 0);\n    var max_size = (max_length ?? _string.length);\n    for (i = 0; i < _string.length; i++) {\n        for (j = _string.length; j - i >= size; j--) {\n            if (_string.slice(i, j).length <= max_size) {\n                result.push(_string.slice(i, j));\n            }\n        }\n    }\n    return result;\n}\n\nexport function create_return(_array) {\n    var return_array = new Array();\n    if (typeof(_array[1]) == 'string') {\n        var newArray = _array.slice();\n        newArray.unshift(0);\n        return newArray;\n    } else {\n        var newArray = _array.slice();\n        newArray.push(\"\");\n        return newArray;\n    }\n}\n}}}\n\nwith sample_data as (\n    select\n        _script.array_suffixes(company, 2) as fts_company,\n        *\n    from\n        taxi.chi_taxi_v3 c\n  -- where company = '3620 - David K. Cab Corp.'\n), raw aS (\n    select\n        DISTINCT company\n    from\n        sample_data s -- WHERE\n        -- -- company is null\n        -- array_contains(s.fts_company, 'meric')\n    group by\n        company\n)\nSELECT\n    ARRAY_AGG(company) from raw\n;\n",
      "entities": [
        "taxi.chi_taxi_v3"
      ],
      "state": "CREATED",
      "created_at": "2022-06-20T18:18:33Z",
      "modified_at": "2022-06-20T19:52:10Z"
    },
    {
      "path": "vector_demos.knn",
      "name": "knn",
      "description": "",
      "workspace": "vector_demos",
      "creator_email": "rafael@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "WITH dune_embedding AS (\n\tSELECT embedding\n\tFROM commons.book_catalogue_embeddings catalogue\n\tWHERE title = 'Dune'\n\tLIMIT 1\n)\nSELECT title, author, rating, num_ratings, price, publish_date, \n\t\t\tDOT_PRODUCT(dune_embedding.embedding, book_catalogue_embeddings.embedding) similarity\nFROM commons.book_catalogue_embeddings CROSS JOIN dune_embedding\nORDER BY similarity DESC\nLIMIT 30",
      "entities": [
        "commons.book_catalogue_embeddings"
      ],
      "state": "CREATED",
      "created_at": "2023-09-19T00:49:24Z",
      "modified_at": "2023-09-19T17:12:54Z"
    },
    {
      "path": "commons.v2",
      "name": "v2",
      "description": "",
      "workspace": "commons",
      "creator_email": "omar@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "select :1 as a",
      "entities": [],
      "state": "CREATED",
      "created_at": "2023-03-22T19:54:14Z",
      "modified_at": "2023-03-22T19:54:14Z"
    },
    {
      "path": "commons.1",
      "name": "1",
      "description": "",
      "workspace": "commons",
      "creator_email": "omar@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "SELECT\n    *\nFROM\n    Demo.twitter_live\nwhere in_reply_to_user_id is NULL",
      "entities": [
        "Demo.twitter_live"
      ],
      "state": "CREATED",
      "created_at": "2023-05-09T20:42:08Z",
      "modified_at": "2023-05-09T20:42:08Z"
    },
    {
      "path": "vector_demos.filtered_knn",
      "name": "filtered_knn",
      "description": "",
      "workspace": "vector_demos",
      "creator_email": "rafael@rockset.com",
      "created_by_apikey_name": null,
      "owner_email": null,
      "query_sql": "WITH dune_embedding AS (\n\tSELECT embedding\n\tFROM commons.book_catalogue_embeddings catalogue\n\tWHERE title = 'Dune'\n\tLIMIT 1\n)\nSELECT title, author, rating, num_ratings, price,\n\t\t\tDOT_PRODUCT(dune_embedding.embedding, book_catalogue_embeddings.embedding) similarity,\n            description, language, book_format, page_count, liked_percent\nFROM commons.book_catalogue_embeddings CROSS JOIN dune_embedding\nWHERE rating IS NOT NULL \n\t\t\tAND book_catalogue_embeddings.embedding IS NOT NULL \n\t\t\tAND author != 'Frank Herbert' \n\t\t\tAND rating > 4.0\nORDER BY similarity DESC\nLIMIT 30",
      "entities": [
        "commons.book_catalogue_embeddings"
      ],
      "state": "CREATED",
      "created_at": "2023-09-19T00:49:43Z",
      "modified_at": "2023-09-19T17:12:33Z"
    }
  ]
}